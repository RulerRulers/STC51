C51 COMPILER V9.50a   KEY                                                                  05/17/2019 08:50:52 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: D:\KEIL4\C51\BIN\C51.EXE src\key.c BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) TABS(2) OBJE
                    -CT(.\Objects\key.obj)

line level    source

   1          /*
   2           * Copyright        : ShenDong MCU studio.
   3           * Description      : keyboard driver  
   4           * Created          : by oliverzhang@shendongmcu.com
   5           */
   6          
   7          #include "global.h"
   8          
   9          sbit LINE_F1 = P4^0;
  10          sbit LINE_F2 = P4^1;
  11          sbit LINE_F3 = P7^5;
  12          
  13          static unsigned char ScanKeyCode(void)
  14          {
  15   1        /*TEST_KEY on the head board.*/
  16   1        if(LINE_F1 == 0) return KEY_SET;
  17   1        if(LINE_F2 == 0) return KEY_MINUS;
  18   1        if(LINE_F3 == 0) return KEY_PLUS;
  19   1        /*No key pressed, return key_none.*/
  20   1        return KEY_NONE;
  21   1      }
  22          
  23          void key_Initialization(void)
  24          {
  25   1        LINE_F1 = 1;
  26   1        LINE_F2 = 1;
  27   1        LINE_F3 = 1;
  28   1      }
  29          
  30          void key_Task(void)
  31          {
  32   1        unsigned char key_code;
  33   1        unsigned long ticks = time_GetTicks();
  34   1        static unsigned long idata oldticks;
  35   1        static unsigned char idata old_code,state = 0;
  36   1        switch(state)
  37   1        {
  38   2        case 0:
  39   2          old_code = ScanKeyCode();
  40   2          if(old_code == KEY_NONE) break;
  41   2          oldticks = ticks;
  42   2          state = 1;
  43   2          break;
  44   2        case 1: /*de-bounce*/
  45   2          if(ticks - oldticks < 20) break;
  46   2          key_code = ScanKeyCode();
  47   2          if(key_code == old_code)
  48   2          {
  49   3            key_InsertKeyCode(key_code, KEY_PRESSED);
  50   3            oldticks = ticks;
  51   3            state = 2;
  52   3          }
  53   2          else
  54   2          {
C51 COMPILER V9.50a   KEY                                                                  05/17/2019 08:50:52 PAGE 2   

  55   3            state = 0;
  56   3          }
  57   2          break;
  58   2        case 2: /*Check for repeat*/
  59   2          key_code = ScanKeyCode();
  60   2          if(key_code == KEY_NONE) 
  61   2          {
  62   3            oldticks = ticks;
  63   3            state = 3;
  64   3          }
  65   2          else
  66   2          {
  67   3            if(ticks - oldticks > 250)
  68   3            {
  69   4              key_InsertKeyCode(old_code, KEY_REPEATED);
  70   4              oldticks = ticks;
  71   4            }
  72   3          }
  73   2          break;
  74   2        case 3: /*check for release*/
  75   2          if(ticks - oldticks < 20) break;
  76   2          key_code = ScanKeyCode();
  77   2          if(key_code == KEY_NONE)
  78   2          {
  79   3            key_InsertKeyCode(old_code, KEY_RELEASED);
  80   3            state = 0;
  81   3          }
  82   2          else 
  83   2          {
  84   3            oldticks = ticks;
  85   3          }
  86   2          break;
  87   2        default:
  88   2          break;
  89   2        }
  90   1      }
  91          
  92          #define KEY_FIFOLEN 2
  93          static struct _key_fifo_tag_{
  94            unsigned char keycode[KEY_FIFOLEN];
  95            unsigned char state[KEY_FIFOLEN];
  96            unsigned char rear;
  97            unsigned char top;
  98          } idata g_key_fifo;
  99          
 100          unsigned char key_GetKeyCode(unsigned char *pcode,unsigned char *pstate)
 101          {
 102   1        unsigned char rear = g_key_fifo.rear;
 103   1        if(rear != g_key_fifo.top)
 104   1        {
 105   2          if(pcode != NULL)*pcode = g_key_fifo.keycode[rear];
 106   2          if(pstate!= NULL)*pstate = g_key_fifo.state[rear];
 107   2          rear++;
 108   2          if(rear >= KEY_FIFOLEN) rear = 0;
 109   2          g_key_fifo.rear = rear;
 110   2          return 1;
 111   2        }
 112   1        return 0;
 113   1      }
 114          
 115          unsigned char key_InsertKeyCode(unsigned char keycode, unsigned char state)
 116          {
C51 COMPILER V9.50a   KEY                                                                  05/17/2019 08:50:52 PAGE 3   

 117   1        unsigned char top,next;
 118   1      
 119   1        //printf("insert key: code = %bu state=%bu\r\n",keycode,state);
 120   1        top = g_key_fifo.top;
 121   1        next = g_key_fifo.top + 1;
 122   1        if(next >= KEY_FIFOLEN) next = 0;
 123   1        if(next != g_key_fifo.rear)
 124   1        {
 125   2          g_key_fifo.keycode[top] = keycode;
 126   2          g_key_fifo.state[top] = state;
 127   2          g_key_fifo.top = next;
 128   2          return 1;
 129   2        }
 130   1        return 0;
 131   1      }
 132          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =     12    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
